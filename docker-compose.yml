version: "3"

services:
  db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    env_file:
      - ./backend/.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile

    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db

  redis:
      image: redis:alpine

  celery_worker:
      build:
          context: ./backend
          dockerfile: Dockerfile
      volumes:
          - ./backend/:/app/backend
      command: celery -A cherwood_shop worker -l info
      depends_on:
          - db
          - redis
          - backend
      restart: on-failure
      env_file:
          - ./backend/.env

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/app/backend
    command: celery -A cherwood_shop beat -l info
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - db
      - redis
      - celery_worker

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: "celery -A cherwood_shop flower --address=0.0.0.0"
    depends_on:
      - celery_worker
    env_file:
      - ./backend/.env
